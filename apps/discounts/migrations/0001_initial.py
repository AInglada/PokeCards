# Generated by Django 4.2.7 on 2025-10-16 00:20

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('free_shipping', 'Free Shipping')], max_length=20, verbose_name='discount type')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='discount value')),
                ('minimum_purchase', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='minimum purchase')),
                ('maximum_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='maximum discount')),
                ('usage_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='usage limit')),
                ('usage_limit_per_user', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='usage limit per user')),
                ('usage_count', models.IntegerField(default=0, verbose_name='usage count')),
                ('valid_from', models.DateTimeField(verbose_name='valid from')),
                ('valid_until', models.DateTimeField(verbose_name='valid until')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='coupons', to='products.category', verbose_name='applicable categories')),
                ('applicable_products', models.ManyToManyField(blank=True, related_name='coupons', to='products.product', verbose_name='applicable products')),
                ('applicable_users', models.ManyToManyField(blank=True, related_name='exclusive_coupons', to=settings.AUTH_USER_MODEL, verbose_name='applicable users')),
            ],
            options={
                'verbose_name': 'coupon',
                'verbose_name_plural': 'coupons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='discount percentage')),
                ('valid_from', models.DateTimeField(verbose_name='valid from')),
                ('valid_until', models.DateTimeField(verbose_name='valid until')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('priority', models.IntegerField(default=0, verbose_name='priority')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='sales', to='products.category', verbose_name='applicable categories')),
                ('applicable_products', models.ManyToManyField(blank=True, related_name='sales', to='products.product', verbose_name='applicable products')),
            ],
            options={
                'verbose_name': 'sale',
                'verbose_name_plural': 'sales',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='discount amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='discounts.coupon', verbose_name='coupon')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to='orders.order', verbose_name='order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'coupon usage',
                'verbose_name_plural': 'coupon usages',
                'ordering': ['-created_at'],
            },
        ),
    ]
